-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.cities
(
    id integer NOT NULL DEFAULT nextval('cities_id_seq'::regclass),
    country_id integer,
    province_id integer,
    name character varying COLLATE pg_catalog."default",
    CONSTRAINT cities_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.countries
(
    id integer NOT NULL DEFAULT nextval('countries_id_seq'::regclass),
    name character varying COLLATE pg_catalog."default",
    region_id integer,
    CONSTRAINT countries_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.currencies
(
    id integer NOT NULL DEFAULT nextval('currencies_id_seq'::regclass),
    name character varying COLLATE pg_catalog."default",
    symbol character varying COLLATE pg_catalog."default",
    country_id integer,
    CONSTRAINT currencies_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.flags
(
    id integer NOT NULL DEFAULT nextval('flags_id_seq'::regclass),
    title character varying COLLATE pg_catalog."default",
    content bytea,
    country_id integer,
    CONSTRAINT flags_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.languages
(
    id integer NOT NULL DEFAULT nextval('languages_id_seq'::regclass),
    name character varying COLLATE pg_catalog."default",
    form character varying COLLATE pg_catalog."default",
    country_id integer,
    CONSTRAINT languages_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.provinces
(
    id integer NOT NULL DEFAULT nextval('provinces_id_seq'::regclass),
    name character varying COLLATE pg_catalog."default",
    country_id integer,
    CONSTRAINT provinces_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.regions
(
    id integer NOT NULL DEFAULT nextval('regions_id_seq'::regclass),
    name character varying COLLATE pg_catalog."default",
    is_active boolean,
    CONSTRAINT regions_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.reset_password_codes
(
    id integer NOT NULL DEFAULT nextval('reset_password_codes_id_seq'::regclass),
    code character varying COLLATE pg_catalog."default",
    user_id integer,
    user_email character varying COLLATE pg_catalog."default",
    status boolean NOT NULL,
    date_created timestamp without time zone,
    date_modified timestamp without time zone,
    CONSTRAINT reset_password_codes_pkey PRIMARY KEY (id),
    CONSTRAINT reset_password_codes_code_key UNIQUE (code),
    CONSTRAINT reset_password_codes_user_email_key UNIQUE (user_email),
    CONSTRAINT reset_password_codes_user_id_key UNIQUE (user_id)
);

CREATE TABLE IF NOT EXISTS public.reset_password_token
(
    id integer NOT NULL DEFAULT nextval('reset_password_token_id_seq'::regclass),
    user_id integer,
    token character varying COLLATE pg_catalog."default",
    date_created timestamp without time zone,
    CONSTRAINT reset_password_token_pkey PRIMARY KEY (id),
    CONSTRAINT reset_password_token_user_id_key UNIQUE (user_id)
);

CREATE TABLE IF NOT EXISTS public.revoked_tokens
(
    id integer NOT NULL DEFAULT nextval('revoked_tokens_id_seq'::regclass),
    jti character varying COLLATE pg_catalog."default",
    date_created timestamp without time zone,
    date_modified timestamp without time zone,
    CONSTRAINT revoked_tokens_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.timezones
(
    id integer NOT NULL DEFAULT nextval('timezones_id_seq'::regclass),
    name character varying COLLATE pg_catalog."default",
    country_id integer,
    CONSTRAINT timezones_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.transports
(
    id integer NOT NULL DEFAULT nextval('transports_id_seq'::regclass),
    name character varying COLLATE pg_catalog."default",
    country_id integer,
    CONSTRAINT transports_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."user"
(
    id integer NOT NULL DEFAULT nextval('user_id_seq'::regclass),
    email character varying COLLATE pg_catalog."default",
    password character varying COLLATE pg_catalog."default",
    status boolean,
    user_type_id integer,
    CONSTRAINT user_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_info
(
    id integer NOT NULL DEFAULT nextval('user_info_id_seq'::regclass),
    user_id integer,
    first_name character varying COLLATE pg_catalog."default",
    middle_name character varying COLLATE pg_catalog."default",
    last_name character varying COLLATE pg_catalog."default",
    CONSTRAINT user_info_pkey PRIMARY KEY (id),
    CONSTRAINT user_info_user_id_key UNIQUE (user_id)
);

CREATE TABLE IF NOT EXISTS public.user_type
(
    id integer NOT NULL DEFAULT nextval('user_type_id_seq'::regclass),
    title character varying COLLATE pg_catalog."default",
    CONSTRAINT user_type_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.cities
    ADD CONSTRAINT cities_country_id_fkey FOREIGN KEY (country_id)
    REFERENCES public.countries (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.cities
    ADD CONSTRAINT cities_province_id_fkey FOREIGN KEY (province_id)
    REFERENCES public.provinces (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.countries
    ADD CONSTRAINT countries_region_id_fkey FOREIGN KEY (region_id)
    REFERENCES public.regions (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.currencies
    ADD CONSTRAINT currencies_country_id_fkey FOREIGN KEY (country_id)
    REFERENCES public.countries (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.flags
    ADD CONSTRAINT flags_country_id_fkey FOREIGN KEY (country_id)
    REFERENCES public.countries (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.languages
    ADD CONSTRAINT languages_country_id_fkey FOREIGN KEY (country_id)
    REFERENCES public.countries (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.provinces
    ADD CONSTRAINT provinces_country_id_fkey FOREIGN KEY (country_id)
    REFERENCES public.countries (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reset_password_token
    ADD CONSTRAINT reset_password_token_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS reset_password_token_user_id_key
    ON public.reset_password_token(user_id);


ALTER TABLE IF EXISTS public.timezones
    ADD CONSTRAINT timezones_country_id_fkey FOREIGN KEY (country_id)
    REFERENCES public.countries (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.transports
    ADD CONSTRAINT transports_country_id_fkey FOREIGN KEY (country_id)
    REFERENCES public.countries (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."user"
    ADD CONSTRAINT user_user_type_id_fkey FOREIGN KEY (user_type_id)
    REFERENCES public.user_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_info
    ADD CONSTRAINT user_info_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS user_info_user_id_key
    ON public.user_info(user_id);

END;
